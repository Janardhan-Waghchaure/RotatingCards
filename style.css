*{
    /* resetting default values of browser. */
    margin: 0;
    padding: 0;
}

/* to space our cards space seperated */
body{
    height: 100vh;
    display: flex;
    justify-content: space-around;
    align-items: center;
}


.container{
    padding: 10px;
    position: relative;
    width: 200px;
    height: 350px;

    /* to specify the distance of viewer from cards , higher the value more the lesser the rotating effect */
    /* but TOO LOW VALUE make animation bad */
    perspective: 300px;
}

.card{
    width: 100%;
    height: 100%;
    position: absolute;
    transition: all 400ms ease-in-out;

    /* to keep the back card positioned on back side and front on front side */
    transform-style: preserve-3d;
}

.card img{
    height: 50%;
}

.card:hover{
    /* rotating the card when hovered over it */
    transform: rotateY(180deg);
    cursor: pointer;
}

.front , .back{

    /* to avoid showing back side of front and back card , without this cards will become like
        transperent mirror */
    backface-visibility: hidden;
    width: 100%;
    height: 100%;
    position: absolute;

    border-radius: 5px;

    /* to center the content of cards */
    display: flex;
    justify-content: center;
    align-items: center;
    
    
}

.front{
    box-shadow: 1px 1px 10px black;
}

.back{
    background-position: center;
    background-size: cover;
    box-shadow: 1px 1px 10px black;

    /* below code is rotating backside to actual "backward" of .card div ,
    without this when front face will rotate then back face will not visible */
    transform: rotateY(180deg);
}

.card span{
    display: inline-block;
}


/* coloring indivisual cards */

#html{
    background-color: rgb(236, 167, 124);
}

#css{
    background-color: rgb(117, 200, 252);
}

#js{
    background-color: rgb(238, 226, 92);
}